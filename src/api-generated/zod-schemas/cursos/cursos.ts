/**
 * Generated by orval v7.9.0 游꽄
 * Do not edit manually.
 * API Hor치rios Acad칡micos
 * Documenta칞칚o da API para o Sistema de Elabora칞칚o de Hor치rio e Atribui칞칚o de Disciplinas
 * OpenAPI spec version: 1.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary Criar um novo curso
 */
export const cursosControllerCreateBody = zod.object({
  "nome": zod.string().describe('Nome do curso'),
  "codigo": zod.string().describe('C칩digo do curso (칰nico)'),
  "idCoordenador": zod.string().describe('ID do coordenador principal do curso')
})

/**
 * @summary Listar todos os cursos
 */
export const cursosControllerFindAllResponseNomeMax = 100;
export const cursosControllerFindAllResponseCodigoMax = 20;


export const cursosControllerFindAllResponseItem = zod.object({
  "id": zod.string().describe('ID 칰nico do curso no formato UUID v4'),
  "nome": zod.string().max(cursosControllerFindAllResponseNomeMax).describe('Nome completo do curso'),
  "codigo": zod.string().max(cursosControllerFindAllResponseCodigoMax).describe('C칩digo 칰nico de identifica칞칚o do curso'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro no formato ISO 8601'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o no formato ISO 8601'),
  "coordenadorPrincipal": zod.object({
  "id": zod.string().describe('ID 칰nico do coordenador no formato UUID v4'),
  "nome": zod.string().describe('Nome completo do coordenador'),
  "email": zod.string().describe('Email do coordenador')
}).optional().describe('Coordenador principal do curso')
})
export const cursosControllerFindAllResponse = zod.array(cursosControllerFindAllResponseItem)

/**
 * @summary Buscar um curso pelo ID
 */
export const cursosControllerFindOneParams = zod.object({
  "id": zod.string().uuid().describe('ID do curso')
})

export const cursosControllerFindOneResponseNomeMax = 100;
export const cursosControllerFindOneResponseCodigoMax = 20;


export const cursosControllerFindOneResponse = zod.object({
  "id": zod.string().describe('ID 칰nico do curso no formato UUID v4'),
  "nome": zod.string().max(cursosControllerFindOneResponseNomeMax).describe('Nome completo do curso'),
  "codigo": zod.string().max(cursosControllerFindOneResponseCodigoMax).describe('C칩digo 칰nico de identifica칞칚o do curso'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro no formato ISO 8601'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o no formato ISO 8601'),
  "coordenadorPrincipal": zod.object({
  "id": zod.string().describe('ID 칰nico do coordenador no formato UUID v4'),
  "nome": zod.string().describe('Nome completo do coordenador'),
  "email": zod.string().describe('Email do coordenador')
}).optional().describe('Coordenador principal do curso')
})

/**
 * @summary Atualizar um curso
 */
export const cursosControllerUpdateParams = zod.object({
  "id": zod.string().uuid().describe('ID do curso')
})

export const cursosControllerUpdateBody = zod.object({
  "nome": zod.string().optional().describe('Nome do curso'),
  "codigo": zod.string().optional().describe('C칩digo do curso (칰nico)'),
  "idCoordenador": zod.string().optional().describe('ID do coordenador principal do curso')
})

export const cursosControllerUpdateResponseNomeMax = 100;
export const cursosControllerUpdateResponseCodigoMax = 20;


export const cursosControllerUpdateResponse = zod.object({
  "id": zod.string().describe('ID 칰nico do curso no formato UUID v4'),
  "nome": zod.string().max(cursosControllerUpdateResponseNomeMax).describe('Nome completo do curso'),
  "codigo": zod.string().max(cursosControllerUpdateResponseCodigoMax).describe('C칩digo 칰nico de identifica칞칚o do curso'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro no formato ISO 8601'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o no formato ISO 8601'),
  "coordenadorPrincipal": zod.object({
  "id": zod.string().describe('ID 칰nico do coordenador no formato UUID v4'),
  "nome": zod.string().describe('Nome completo do coordenador'),
  "email": zod.string().describe('Email do coordenador')
}).optional().describe('Coordenador principal do curso')
})

/**
 * @summary Remover um curso
 */
export const cursosControllerRemoveParams = zod.object({
  "id": zod.string().uuid().describe('ID do curso')
})

export const cursosControllerRemoveResponseNomeMax = 100;
export const cursosControllerRemoveResponseCodigoMax = 20;


export const cursosControllerRemoveResponse = zod.object({
  "id": zod.string().describe('ID 칰nico do curso no formato UUID v4'),
  "nome": zod.string().max(cursosControllerRemoveResponseNomeMax).describe('Nome completo do curso'),
  "codigo": zod.string().max(cursosControllerRemoveResponseCodigoMax).describe('C칩digo 칰nico de identifica칞칚o do curso'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro no formato ISO 8601'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o no formato ISO 8601'),
  "coordenadorPrincipal": zod.object({
  "id": zod.string().describe('ID 칰nico do coordenador no formato UUID v4'),
  "nome": zod.string().describe('Nome completo do coordenador'),
  "email": zod.string().describe('Email do coordenador')
}).optional().describe('Coordenador principal do curso')
})

