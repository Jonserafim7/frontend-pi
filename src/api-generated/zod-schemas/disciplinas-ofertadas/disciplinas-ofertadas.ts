/**
 * Generated by orval v7.9.0 游꽄
 * Do not edit manually.
 * API Hor치rios Acad칡micos
 * Documenta칞칚o da API para o Sistema de Elabora칞칚o de Hor치rio e Atribui칞칚o de Disciplinas
 * OpenAPI spec version: 1.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary Criar uma nova oferta de disciplina (Admin, Diretor, Coordenador)
 */
export const disciplinasOfertadasControllerCreateBody = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina ofertada')
})

/**
 * @summary Listar disciplinas ofertadas (Admin, Diretor, Coordenador)
 */
export const disciplinasOfertadasControllerFindAllQueryParams = zod.object({
  "periodoId": zod.string().optional().describe('ID do per칤odo letivo para filtrar (UUID)'),
  "cursoId": zod.string().optional().describe('ID do curso para filtrar (UUID)')
})

export const disciplinasOfertadasControllerFindAllResponseItem = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina ofertada'),
  "id": zod.string().describe('ID da oferta da disciplina (UUID)'),
  "disciplina": zod.object({
  "id": zod.string().describe('ID 칰nico da disciplina'),
  "nome": zod.string().describe('Nome da disciplina'),
  "codigo": zod.string().optional().describe('C칩digo 칰nico da disciplina'),
  "cargaHoraria": zod.number().describe('Carga hor치ria total da disciplina em horas'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes da disciplina ofertada'),
  "periodoLetivo": zod.object({
  "id": zod.string().describe('ID 칰nico do per칤odo letivo'),
  "ano": zod.number().describe('Ano do per칤odo letivo'),
  "semestre": zod.number().describe('Semestre do per칤odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per칤odo letivo'),
  "dataInicio": zod.string().describe('Data de in칤cio do per칤odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per칤odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes do per칤odo letivo da oferta'),
  "createdAt": zod.string().datetime({}).describe('Data de cria칞칚o da oferta da disciplina'),
  "updatedAt": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o da oferta da disciplina')
})
export const disciplinasOfertadasControllerFindAllResponse = zod.array(disciplinasOfertadasControllerFindAllResponseItem)

/**
 * @summary Criar oferta de disciplina no per칤odo letivo ativo (Coordenador)
 */
export const disciplinasOfertadasControllerCreateComPeriodoAtivoBody = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina a ser ofertada'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina')
})

/**
 * @summary Obter detalhes de uma oferta de disciplina espec칤fica (Admin, Diretor, Coordenador)
 */
export const disciplinasOfertadasControllerFindOneParams = zod.object({
  "id": zod.string().describe('ID da oferta da disciplina (UUID)')
})

export const disciplinasOfertadasControllerFindOneResponse = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina ofertada'),
  "id": zod.string().describe('ID da oferta da disciplina (UUID)'),
  "disciplina": zod.object({
  "id": zod.string().describe('ID 칰nico da disciplina'),
  "nome": zod.string().describe('Nome da disciplina'),
  "codigo": zod.string().optional().describe('C칩digo 칰nico da disciplina'),
  "cargaHoraria": zod.number().describe('Carga hor치ria total da disciplina em horas'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes da disciplina ofertada'),
  "periodoLetivo": zod.object({
  "id": zod.string().describe('ID 칰nico do per칤odo letivo'),
  "ano": zod.number().describe('Ano do per칤odo letivo'),
  "semestre": zod.number().describe('Semestre do per칤odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per칤odo letivo'),
  "dataInicio": zod.string().describe('Data de in칤cio do per칤odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per칤odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes do per칤odo letivo da oferta'),
  "createdAt": zod.string().datetime({}).describe('Data de cria칞칚o da oferta da disciplina'),
  "updatedAt": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o da oferta da disciplina')
})

/**
 * @summary Atualizar dados de uma oferta de disciplina (Admin, Diretor, Coordenador)
 */
export const disciplinasOfertadasControllerUpdateParams = zod.object({
  "id": zod.string().describe('ID da oferta da disciplina (UUID)')
})

export const disciplinasOfertadasControllerUpdateBody = zod.object({
  "idDisciplina": zod.string().optional().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().optional().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).optional().describe('Quantidade de turmas para esta disciplina ofertada')
})

export const disciplinasOfertadasControllerUpdateResponse = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina ofertada'),
  "id": zod.string().describe('ID da oferta da disciplina (UUID)'),
  "disciplina": zod.object({
  "id": zod.string().describe('ID 칰nico da disciplina'),
  "nome": zod.string().describe('Nome da disciplina'),
  "codigo": zod.string().optional().describe('C칩digo 칰nico da disciplina'),
  "cargaHoraria": zod.number().describe('Carga hor치ria total da disciplina em horas'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes da disciplina ofertada'),
  "periodoLetivo": zod.object({
  "id": zod.string().describe('ID 칰nico do per칤odo letivo'),
  "ano": zod.number().describe('Ano do per칤odo letivo'),
  "semestre": zod.number().describe('Semestre do per칤odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per칤odo letivo'),
  "dataInicio": zod.string().describe('Data de in칤cio do per칤odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per칤odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes do per칤odo letivo da oferta'),
  "createdAt": zod.string().datetime({}).describe('Data de cria칞칚o da oferta da disciplina'),
  "updatedAt": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o da oferta da disciplina')
})

/**
 * @summary Cancelar uma oferta de disciplina (Admin, Diretor, Coordenador)
 */
export const disciplinasOfertadasControllerRemoveParams = zod.object({
  "id": zod.string().describe('ID da oferta da disciplina (UUID)')
})

/**
 * @summary Listar disciplinas ofertadas dos cursos do coordenador (Coordenador)
 */
export const disciplinasOfertadasControllerFindOfertasDoCoordenadorResponseItem = zod.object({
  "idDisciplina": zod.string().describe('ID da disciplina que ser치 ofertada (UUID)'),
  "idPeriodoLetivo": zod.string().describe('ID do per칤odo letivo em que a disciplina ser치 ofertada (UUID)'),
  "quantidadeTurmas": zod.number().min(1).describe('Quantidade de turmas para esta disciplina ofertada'),
  "id": zod.string().describe('ID da oferta da disciplina (UUID)'),
  "disciplina": zod.object({
  "id": zod.string().describe('ID 칰nico da disciplina'),
  "nome": zod.string().describe('Nome da disciplina'),
  "codigo": zod.string().optional().describe('C칩digo 칰nico da disciplina'),
  "cargaHoraria": zod.number().describe('Carga hor치ria total da disciplina em horas'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes da disciplina ofertada'),
  "periodoLetivo": zod.object({
  "id": zod.string().describe('ID 칰nico do per칤odo letivo'),
  "ano": zod.number().describe('Ano do per칤odo letivo'),
  "semestre": zod.number().describe('Semestre do per칤odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per칤odo letivo'),
  "dataInicio": zod.string().describe('Data de in칤cio do per칤odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per칤odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria칞칚o do registro'),
  "dataAtualizacao": zod.string().describe('Data da 칰ltima atualiza칞칚o do registro')
}).describe('Detalhes do per칤odo letivo da oferta'),
  "createdAt": zod.string().datetime({}).describe('Data de cria칞칚o da oferta da disciplina'),
  "updatedAt": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o da oferta da disciplina')
})
export const disciplinasOfertadasControllerFindOfertasDoCoordenadorResponse = zod.array(disciplinasOfertadasControllerFindOfertasDoCoordenadorResponseItem)

