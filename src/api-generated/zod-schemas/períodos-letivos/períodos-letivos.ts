/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API Hor√°rios Acad√™micos
 * Documenta√ß√£o da API para o Sistema de Elabora√ß√£o de Hor√°rio e Atribui√ß√£o de Disciplinas
 * OpenAPI spec version: 1.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary Cria um novo per√≠odo letivo
 */
export const periodosLetivosControllerCreateBodyAnoMin = 2000;

export const periodosLetivosControllerCreateBodyAnoMax = 2100;
export const periodosLetivosControllerCreateBodySemestreMax = 2;
export const periodosLetivosControllerCreateBodyStatusDefault = "INATIVO";

export const periodosLetivosControllerCreateBody = zod.object({
  "ano": zod.number().min(periodosLetivosControllerCreateBodyAnoMin).max(periodosLetivosControllerCreateBodyAnoMax).describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().min(1).max(periodosLetivosControllerCreateBodySemestreMax).describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).default(periodosLetivosControllerCreateBodyStatusDefault).describe('Status inicial do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo no formato YYYY-MM-DD'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo no formato YYYY-MM-DD')
})

/**
 * @summary Lista todos os per√≠odos letivos com filtros opcionais
 */
export const periodosLetivosControllerFindAllQueryParams = zod.object({
  "id": zod.string().optional().describe('ID do per√≠odo letivo'),
  "ano": zod.number().optional().describe('Filtrar por ano'),
  "semestre": zod.number().optional().describe('Filtrar por semestre (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).optional().describe('Filtrar por status'),
  "dataInicioGte": zod.string().optional().describe('Data de in√≠cio do per√≠odo letivo (filtro a partir de)'),
  "dataInicioLte": zod.string().optional().describe('Data de in√≠cio do per√≠odo letivo (filtro at√©)'),
  "dataFimGte": zod.string().optional().describe('Data de fim do per√≠odo letivo (filtro a partir de)'),
  "dataFimLte": zod.string().optional().describe('Data de fim do per√≠odo letivo (filtro at√©)')
})

export const periodosLetivosControllerFindAllResponseItem = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})
export const periodosLetivosControllerFindAllResponse = zod.array(periodosLetivosControllerFindAllResponseItem)

/**
 * @summary Busca o per√≠odo letivo ativo atual
 */
export const periodosLetivosControllerFindPeriodoAtivoResponse = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})

/**
 * @summary Busca um per√≠odo letivo pelo ID
 */
export const periodosLetivosControllerFindOneParams = zod.object({
  "id": zod.string().describe('ID do per√≠odo letivo (UUID)')
})

export const periodosLetivosControllerFindOneResponse = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})

/**
 * @summary Atualiza um per√≠odo letivo existente
 */
export const periodosLetivosControllerUpdateParams = zod.object({
  "id": zod.string().describe('ID do per√≠odo letivo a ser atualizado (UUID)')
})

export const periodosLetivosControllerUpdateBodyAnoMin = 2000;

export const periodosLetivosControllerUpdateBodyAnoMax = 2100;
export const periodosLetivosControllerUpdateBodySemestreMax = 2;
export const periodosLetivosControllerUpdateBodyStatusDefault = "INATIVO";

export const periodosLetivosControllerUpdateBody = zod.object({
  "ano": zod.number().min(periodosLetivosControllerUpdateBodyAnoMin).max(periodosLetivosControllerUpdateBodyAnoMax).optional().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().min(1).max(periodosLetivosControllerUpdateBodySemestreMax).optional().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).default(periodosLetivosControllerUpdateBodyStatusDefault).describe('Status inicial do per√≠odo letivo'),
  "dataInicio": zod.string().optional().describe('Data de in√≠cio do per√≠odo letivo no formato YYYY-MM-DD'),
  "dataFim": zod.string().optional().describe('Data de fim do per√≠odo letivo no formato YYYY-MM-DD')
})

export const periodosLetivosControllerUpdateResponse = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})

/**
 * @summary Remove um per√≠odo letivo
 */
export const periodosLetivosControllerRemoveParams = zod.object({
  "id": zod.string().describe('ID do per√≠odo letivo a ser removido (UUID)')
})

export const periodosLetivosControllerRemoveResponse = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})

/**
 * @summary Altera o status de um per√≠odo letivo
 */
export const periodosLetivosControllerChangeStatusParams = zod.object({
  "id": zod.string().describe('ID do per√≠odo letivo (UUID)')
})

export const periodosLetivosControllerChangeStatusBody = zod.object({
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Novo status do per√≠odo letivo')
})

export const periodosLetivosControllerChangeStatusResponse = zod.object({
  "id": zod.string().describe('ID √∫nico do per√≠odo letivo'),
  "ano": zod.number().describe('Ano do per√≠odo letivo'),
  "semestre": zod.number().describe('Semestre do per√≠odo letivo (1 ou 2)'),
  "status": zod.enum(['ATIVO', 'INATIVO']).describe('Status atual do per√≠odo letivo'),
  "dataInicio": zod.string().describe('Data de in√≠cio do per√≠odo letivo'),
  "dataFim": zod.string().describe('Data de fim do per√≠odo letivo'),
  "dataCriacao": zod.string().describe('Data de cria√ß√£o do registro'),
  "dataAtualizacao": zod.string().describe('Data da √∫ltima atualiza√ß√£o do registro')
})

