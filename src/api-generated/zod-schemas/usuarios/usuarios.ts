/**
 * Generated by orval v7.9.0 游꽄
 * Do not edit manually.
 * API Hor치rios Acad칡micos
 * Documenta칞칚o da API para o Sistema de Elabora칞칚o de Hor치rio e Atribui칞칚o de Disciplinas
 * OpenAPI spec version: 1.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary Cria um novo usu치rio
 */
export const usuariosControllerCreateBodySenhaMin = 8;


export const usuariosControllerCreateBody = zod.object({
  "nome": zod.string().describe('Nome completo do usu치rio'),
  "email": zod.string().describe('Endere칞o de e-mail do usu치rio (ser치 usado para login)'),
  "senha": zod.string().min(usuariosControllerCreateBodySenhaMin).describe('Senha do usu치rio (m칤nimo de 8 caracteres)'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).describe('Papel do usu치rio no sistema')
})

/**
 * @summary Lista usu치rios com filtros e pagina칞칚o
 */
export const usuariosControllerFindAllQueryParams = zod.object({
  "busca": zod.string().optional().describe('Termo para buscar por nome ou email'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).optional().describe('Filtrar por papel do usu치rio'),
  "pagina": zod.number().optional().describe('N칰mero da p치gina (padr칚o: 1)'),
  "limite": zod.number().optional().describe('N칰mero de itens por p치gina (padr칚o: 10, m치ximo: 100)')
})

export const usuariosControllerFindAllResponse = zod.object({
  "meta": zod.object({
  "total": zod.number().describe('N칰mero total de itens em todas as p치ginas'),
  "paginas": zod.number().describe('N칰mero total de p치ginas dispon칤veis'),
  "pagina": zod.number().describe('N칰mero da p치gina atual (come칞ando em 1)'),
  "limite": zod.number().describe('N칰mero m치ximo de itens por p치gina')
}).describe('Metadados de pagina칞칚o'),
  "data": zod.array(zod.object({
  "id": zod.string().describe('ID 칰nico do usu치rio'),
  "nome": zod.string().describe('Nome completo do usu치rio'),
  "email": zod.string().describe('Endere칞o de e-mail do usu치rio'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).describe('Papel do usu치rio no sistema'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do usu치rio'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do usu치rio')
})).describe('Lista de usu치rios')
})

/**
 * @summary Obt칠m um usu치rio pelo ID
 */
export const usuariosControllerFindOneParams = zod.object({
  "id": zod.string().describe('ID do usu치rio')
})

export const usuariosControllerFindOneResponse = zod.object({
  "id": zod.string().describe('ID 칰nico do usu치rio'),
  "nome": zod.string().describe('Nome completo do usu치rio'),
  "email": zod.string().describe('Endere칞o de e-mail do usu치rio'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).describe('Papel do usu치rio no sistema'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do usu치rio'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do usu치rio')
})

/**
 * @summary Atualiza um usu치rio
 */
export const usuariosControllerUpdateParams = zod.object({
  "id": zod.string().describe('ID do usu치rio')
})

export const usuariosControllerUpdateBodySenhaMin = 8;


export const usuariosControllerUpdateBody = zod.object({
  "nome": zod.string().optional().describe('Nome completo do usu치rio'),
  "email": zod.string().optional().describe('Endere칞o de e-mail do usu치rio (ser치 usado para login)'),
  "senha": zod.string().min(usuariosControllerUpdateBodySenhaMin).optional().describe('Senha do usu치rio (m칤nimo de 8 caracteres)'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).optional().describe('Papel do usu치rio no sistema')
})

export const usuariosControllerUpdateResponse = zod.object({
  "id": zod.string().describe('ID 칰nico do usu치rio'),
  "nome": zod.string().describe('Nome completo do usu치rio'),
  "email": zod.string().describe('Endere칞o de e-mail do usu치rio'),
  "papel": zod.enum(['ADMIN', 'DIRETOR', 'COORDENADOR', 'PROFESSOR']).describe('Papel do usu치rio no sistema'),
  "dataCriacao": zod.string().datetime({}).describe('Data de cria칞칚o do usu치rio'),
  "dataAtualizacao": zod.string().datetime({}).describe('Data da 칰ltima atualiza칞칚o do usu치rio')
})

/**
 * @summary Remove um usu치rio
 */
export const usuariosControllerRemoveParams = zod.object({
  "id": zod.string().describe('ID do usu치rio')
})

